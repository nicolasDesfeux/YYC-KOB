/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.10).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-01-02T22:35:02.857Z")

@Api(value = "game", description = "the game API")
public interface GameApi {

    @ApiOperation(value = "Add a new game", nickname = "addGame", notes = "", tags = {"Games",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "New game succesfully added"),
            @ApiResponse(code = 405, message = "Invalid input")})
    @RequestMapping(value = "/game",
            produces = {"text/plain"},
            consumes = {"application/x-www-form-urlencoded"},
            method = RequestMethod.POST)
    ResponseEntity<Void> addGame(@ApiParam(value = "Date of the game (format: YYYY-MM-DD)", required = true) @RequestParam(value = "name", required = true) String name);


    @ApiOperation(value = "Deletes a game", nickname = "deletegame", notes = "", tags = {"Games",})
    @ApiResponses(value = {
            @ApiResponse(code = 400, message = "Invalid ID supplied"),
            @ApiResponse(code = 404, message = "Game not found")})
    @RequestMapping(value = "/game/{gameId}",
            method = RequestMethod.DELETE)
    ResponseEntity<Void> deletegame(@ApiParam(value = "game id to delete", required = true) @PathVariable("gameId") Long gameId);


    @ApiOperation(value = "Finds a Game by Id", nickname = "getGameById", notes = "Returns a single game", response = String.class, tags = {"Games",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Game found", response = String.class),
            @ApiResponse(code = 404, message = "Game not found")})
    @RequestMapping(value = "/game/{gameId}",
            produces = {"text/plain"},
            method = RequestMethod.GET)
    ResponseEntity<String> getGameById(@ApiParam(value = "ID of game to return", required = true) @PathVariable("gameId") Long gameId);


    @ApiOperation(value = "Updates a game date", nickname = "updateGameWithForm", notes = "", tags = {"Games",})
    @ApiResponses(value = {
            @ApiResponse(code = 405, message = "Invalid input")})
    @RequestMapping(value = "/game/{gameId}",
            produces = {"text/plain"},
            consumes = {"application/x-www-form-urlencoded"},
            method = RequestMethod.POST)
    ResponseEntity<Void> updateGameWithForm(@ApiParam(value = "ID of game that needs to be updated", required = true) @PathVariable("gameId") Long gameId, @ApiParam(value = "Updated date of the player", required = true) @RequestParam(value = "name", required = true) String name);

}
